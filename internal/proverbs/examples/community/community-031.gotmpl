// Atomic operations for simple counters
var counter int64

func increment() {
    atomic.AddInt64(&counter, 1)
}

func decrement() {
    atomic.AddInt64(&counter, -1)
}

func getValue() int64 {
    return atomic.LoadInt64(&counter)
}

func reset() {
    atomic.StoreInt64(&counter, 0)
}

func main() {
    var wg sync.WaitGroup
    
    // Multiple goroutines incrementing
    for i := 0; i < 10; i++ {
        wg.Add(1)
        go func() {
            defer wg.Done()
            increment()
        }()
    }
    
    wg.Wait()
    fmt.Printf("Final counter value: %d\n", getValue())
}