// Bad: Syscalls without build tags
// +build ignore

package main

import (
	"syscall"
	"unsafe"
)

// This will break on non-Unix systems
func getProcessInfo() (int, error) {
	var rusage syscall.Rusage
	err := syscall.Getrusage(syscall.RUSAGE_SELF, &rusage)
	if err != nil {
		return 0, err
	}
	return int(rusage.Maxrss), nil
}

// Good: Syscalls with build tags
// File: process_unix.go
// +build unix

package process

import "syscall"

func GetMemoryUsage() (int64, error) {
	var rusage syscall.Rusage
	err := syscall.Getrusage(syscall.RUSAGE_SELF, &rusage)
	if err != nil {
		return 0, err
	}
	return rusage.Maxrss, nil
}

// File: process_windows.go
// +build windows

package process

import "golang.org/x/sys/windows"

func GetMemoryUsage() (int64, error) {
	// Windows-specific implementation
	return 0, nil
}