// BAD: Shared memory with mutex
type Counter struct {
	mu    sync.Mutex
	value int
}
func (c *Counter) Inc() { c.mu.Lock(); c.value++; c.mu.Unlock() }

// GOOD: Communicate via channels
func counter(ch chan int) {
	count := 0
	for range ch {
		count++
		fmt.Println(count)
	}
}

// Usage: go counter(ch); ch <- 1; ch <- 1