// Bad: Trying to be too clever
func fibonacci(n int) int {
	return int(((math.Pow(1.618033988749895, float64(n)) - 
			   math.Pow(-0.618033988749895, float64(n))) / 
			   math.Sqrt(5)) + 0.5)
}

// Good: Clear and readable
func fibonacciClear(n int) int {
	if n <= 1 {
		return n
	}
	a, b := 0, 1
	for i := 2; i <= n; i++ {
		a, b = b, a+b
	}
	return b
}

// Bad: Clever bit manipulation
func isPowerOfTwo(n int) bool {
	return n > 0 && (n&(n-1)) == 0
}

// Good: Clear logic
func isPowerOfTwoClear(n int) bool {
	if n <= 0 {
		return false
	}
	for n > 1 {
		if n%2 != 0 {
			return false
		}
		n /= 2
	}
	return true
}