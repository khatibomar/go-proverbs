// Bad: Using any everywhere
func Process(data any) any {
	if s, ok := data.(string); ok {
		return strings.ToUpper(s)
	}
	return nil
}

// Good: Specific types
func ProcessString(s string) string {
	return strings.ToUpper(s)
}

// Better: Use generics
func Transform[T any](data T, fn func(T) T) T {
	return fn(data)
}